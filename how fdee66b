[33mcommit fdee66b4764d9355775c4418ee9a0ae6be2fe601[m
Author: YAMAMOTO Masaya <pandax381@gmail.com>
Date:   Tue Mar 8 00:42:29 2022 +0900

    step19

[1mdiff --git a/udp.c b/udp.c[m
[1mindex 68f2966..da93218 100644[m
[1m--- a/udp.c[m
[1m+++ b/udp.c[m
[36m@@ -5,10 +5,18 @@[m
 #include <string.h>[m
 #include <sys/types.h>[m
 [m
[32m+[m[32m#include "platform.h"[m
[32m+[m
 #include "util.h"[m
 #include "ip.h"[m
 #include "udp.h"[m
 [m
[32m+[m[32m#define UDP_PCB_SIZE 16[m
[32m+[m
[32m+[m[32m#define UDP_PCB_STATE_FREE    0[m
[32m+[m[32m#define UDP_PCB_STATE_OPEN    1[m
[32m+[m[32m#define UDP_PCB_STATE_CLOSING 2[m
[32m+[m
 struct pseudo_hdr {[m
     uint32_t src;[m
     uint32_t dst;[m
[36m@@ -24,6 +32,21 @@[m [mstruct udp_hdr {[m
     uint16_t sum;[m
 };[m
 [m
[32m+[m[32mstruct udp_pcb {[m
[32m+[m[32m    int state;[m
[32m+[m[32m    struct ip_endpoint local;[m
[32m+[m[32m    struct queue_head queue; /* receive queue */[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mstruct udp_queue_entry {[m
[32m+[m[32m    struct ip_endpoint foreign;[m
[32m+[m[32m    uint16_t len;[m
[32m+[m[32m    uint8_t data[];[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mstatic mutex_t mutex = MUTEX_INITIALIZER;[m
[32m+[m[32mstatic struct udp_pcb pcbs[UDP_PCB_SIZE];[m
[32m+[m
 static void[m
 udp_dump(const uint8_t *data, size_t len)[m
 {[m
[36m@@ -41,6 +64,37 @@[m [mudp_dump(const uint8_t *data, size_t len)[m
     funlockfile(stderr);[m
 }[m
 [m
[32m+[m[32m/*[m
[32m+[m[32m * UDP Protocol Control Block (PCB)[m
[32m+[m[32m *[m
[32m+[m[32m * NOTE: UDP PCB functions must be called after mutex locked[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mstatic struct udp_pcb *[m
[32m+[m[32mudp_pcb_alloc(void)[m
[32m+[m[32m{[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mudp_pcb_release(struct udp_pcb *pcb)[m
[32m+[m[32m{[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mstatic struct udp_pcb *[m
[32m+[m[32mudp_pcb_select(ip_addr_t addr, uint16_t port)[m
[32m+[m[32m{[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mstatic struct udp_pcb *[m
[32m+[m[32mudp_pcb_get(int id)[m
[32m+[m[32m{[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mstatic int[m
[32m+[m[32mudp_pcb_id(struct udp_pcb *pcb)[m
[32m+[m[32m{[m
[32m+[m[32m}[m
[32m+[m
 static void[m
 udp_input(const uint8_t *data, size_t len, ip_addr_t src, ip_addr_t dst, struct ip_iface *iface)[m
 {[m
[36m@@ -123,3 +177,22 @@[m [mudp_init(void)[m
     }[m
     return 0;[m
 }[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m * UDP User Commands[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mudp_open(void)[m
[32m+[m[32m{[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mudp_close(int id)[m
[32m+[m[32m{[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mudp_bind(int id, struct ip_endpoint *local)[m
[32m+[m[32m{[m
[32m+[m[32m}[m
[1mdiff --git a/udp.h b/udp.h[m
[1mindex b083462..b06ba25 100644[m
[1m--- a/udp.h[m
[1m+++ b/udp.h[m
[36m@@ -12,4 +12,11 @@[m [mudp_output(struct ip_endpoint *src, struct ip_endpoint *dst, const uint8_t *buf,[m
 extern int[m
 udp_init(void);[m
 [m
[32m+[m[32mextern int[m
[32m+[m[32mudp_open(void);[m
[32m+[m[32mextern int[m
[32m+[m[32mudp_bind(int index, struct ip_endpoint *local);[m
[32m+[m[32mextern int[m
[32m+[m[32mudp_close(int id);[m
[32m+[m
 #endif[m
